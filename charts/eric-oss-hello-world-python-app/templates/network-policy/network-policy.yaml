apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "eric-oss-hello-world-python-app.name" . }}-network-policy-api-gw
  labels:
    {{- include "eric-oss-hello-world-python-app.labels" . | indent 4 }}
    {{- if .Values.labels }}
      {{ .Values.labels | toYaml | indent 4 }}
    {{- end }}
  annotations:
  {{- include "eric-oss-hello-world-python-app.product-info" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eric-oss-hello-world-python-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
    - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: eric-eo-api-gateway
    - podSelector:
        matchLabels:
          app: eric-sef-exposure-api-gateway
    - podSelector:
        matchLabels:
          app: eric-pm-server
    {{- if eq .Values.profile "minikube" }}
    - podSelector:
        matchLabels:
          run: curl
    {{- end }}
    ports:
        - port: 8080   # Envoy HTTP
        - port: 8443   # Envoy HTTPS
        - port: {{ .Values.service.port }}  # Optional: app port (e.g., 8050)
